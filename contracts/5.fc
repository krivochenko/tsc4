{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

() recv_internal() {
}

(tuple) fib(int start, int count) {
  int i = 0;
  int prev = -1;
  int last = 0;
  tuple result = empty_tuple();
  while (i < start + count) {
    int current = (prev < 1) ? prev + 1 : prev + last;
    prev = last;
    last = current;
    if (i >= start) {
      result~tpush(current);
    }
    i = i + 1;
  }
  return result;
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id {
  return fib(n, k);
}
